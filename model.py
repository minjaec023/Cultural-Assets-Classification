# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K6VSqeDy29rKiW_kaxGSTCEXtPzgc1T_
"""

import numpy as np
from keras.datasets import cifar100
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import Dropout, BatchNormalization, Activation
from keras.layers import Flatten
from keras.constraints import maxnorm
from keras.optimizers import SGD
from keras.layers.convolutional import Conv2D, ZeroPadding2D
from keras.layers.convolutional import MaxPooling2D
from keras.utils import np_utils

X_train= np.load('/content/drive/My Drive/train_data.npy')
X_test = np.load('/content/drive/My Drive/test_data.npy')
Y_train = np.load('/content/drive/My Drive/train_label.npy')
Y_test = np.load('/content/drive/My Drive/test_label.npy')

model = Sequential()

model.add(Conv2D(256, kernel_size=(3, 3), input_shape=(64, 48, 3), strides=(1, 1)))
model.add(BatchNormalization())
model.add(Activation('relu'))
model.add(ZeroPadding2D())
model.add(Conv2D(100, kernel_size=(3, 3), strides=(1, 1)))
model.add(BatchNormalization())
model.add(Activation('relu'))
model.add(ZeroPadding2D())
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.05))

model.add(Flatten())
model.add(BatchNormalization())
model.add(Dense(100))
model.add(BatchNormalization())
model.add(Activation('relu'))
model.add(Dense(6))
model.add(BatchNormalization())
model.add(Activation('softmax'))

epochs = 5
lrate = 0.01
decay = lrate/epochs
sgd = SGD(lr=lrate, momentum=0.9, decay=decay, nesterov=False)
model.compile(loss='categorical_crossentropy', optimizer=sgd, metrics=['accuracy'])

model.fit(X_train, Y_train, validation_data=(X_test, Y_test), epochs=epochs, batch_size=32)

scores = model.evaluate(X_test, Y_test, verbose=0)
print("Accuracy: %.2f%%" % (scores[1]*100))

# model.save('Gersang.h5')

from google.colab import drive
drive.mount('/content/drive')

from google.colab import drive
drive.mount('/gdrive', force_remount=True)